-- MySQL Script generated by MySQL Workbench
-- Sun Dec  8 21:16:36 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`customer` (
  `customer_id` VARCHAR(255) NOT NULL,
  `customer_unique_id` VARCHAR(255) NULL,
  `customer_zip_code_prefix` INT(10) NULL,
  `customer_city` VARCHAR(45) NULL,
  `customer_state` VARCHAR(45) NULL,
  PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`orders_payment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`orders_payment` (
  `order_id` VARCHAR(255) NOT NULL,
  `payment_sequential` INT NULL,
  `payment_type` VARCHAR(45) NULL,
  `payment_installments` INT(3) NULL,
  `payment_value` DECIMAL(8,5) NULL,
  PRIMARY KEY (`order_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Orders` (
  `Order_id` VARCHAR(255) NOT NULL,
  `customer_id` VARCHAR(255) NOT NULL,
  `order_status` VARCHAR(45) NULL,
  `order_purchase_timestamp` VARCHAR(45) NULL,
  `order_approved_at` VARCHAR(45) NULL,
  `order_delivered_carrier_date` VARCHAR(45) NULL,
  `order_delivered_customer_date` VARCHAR(45) NULL,
  `order_estimated_delivery_date` VARCHAR(45) NULL,
  PRIMARY KEY (`Order_id`),
  INDEX `fk_Orders_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_Orders_orders_payment1_idx` (`Order_id` ASC) VISIBLE,
  CONSTRAINT `fk_Orders_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mydb`.`customer` (`customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Orders_orders_payment1`
    FOREIGN KEY (`Order_id`)
    REFERENCES `mydb`.`orders_payment` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`english_translation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`english_translation` (
  `product_category_name` VARCHAR(255) NOT NULL,
  `product_category_name_english` VARCHAR(255) NULL,
  PRIMARY KEY (`product_category_name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`products` (
  `product_id` VARCHAR(255) NOT NULL,
  `product_category_name` VARCHAR(255) NOT NULL,
  `product_name_lenght` INT(3) NULL,
  `product_description_lenght` INT(5) NULL,
  `product_photos_qty` INT(2) NULL,
  `product_weight_g` INT(8) NULL,
  `product_length_cm` INT(4) NULL,
  `product_height_cm` INT(3) NULL,
  `product_width_cm` INT(3) NULL,
  PRIMARY KEY (`product_id`),
  INDEX `fk_products_english_translation1_idx` (`product_category_name` ASC) VISIBLE,
  CONSTRAINT `fk_products_english_translation1`
    FOREIGN KEY (`product_category_name`)
    REFERENCES `mydb`.`english_translation` (`product_category_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`geolocation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`geolocation` (
  `geolocation_zip_code_prefix` INT(8) NOT NULL,
  `geolocation_lat` DECIMAL(12,8) NULL,
  `geolocation_lng` DECIMAL(12,8) NULL,
  `geolocation_city` VARCHAR(45) NULL,
  `geolocation_state` CHAR(3) NULL,
  PRIMARY KEY (`geolocation_zip_code_prefix`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`seller`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`seller` (
  `seller_id` VARCHAR(255) NOT NULL,
  `geolocation_zip_code_prefix` INT(8) NOT NULL,
  `seller_city` VARCHAR(45) NULL,
  `seller_state` VARCHAR(5) NULL,
  PRIMARY KEY (`seller_id`),
  INDEX `fk_seller_geolocation1_idx` (`geolocation_zip_code_prefix` ASC) VISIBLE,
  CONSTRAINT `fk_seller_geolocation1`
    FOREIGN KEY (`geolocation_zip_code_prefix`)
    REFERENCES `mydb`.`geolocation` (`geolocation_zip_code_prefix`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`order_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`order_item` (
  `Order_id` VARCHAR(255) NOT NULL,
  `order_item_id` VARCHAR(45) NULL,
  `product_id` VARCHAR(255) NOT NULL,
  `seller_id` VARCHAR(255) NOT NULL,
  `shipping_limit_date` VARCHAR(45) NULL,
  `price` DECIMAL(8,4) NULL,
  `freight_value` DECIMAL(6,3) NULL,
  INDEX `fk_order_item_Orders1_idx` (`Order_id` ASC) VISIBLE,
  PRIMARY KEY (`Order_id`),
  INDEX `fk_order_item_products1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_order_item_seller1_idx` (`seller_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_item_Orders1`
    FOREIGN KEY (`Order_id`)
    REFERENCES `mydb`.`Orders` (`Order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_item_products1`
    FOREIGN KEY (`product_id`)
    REFERENCES `mydb`.`products` (`product_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_item_seller1`
    FOREIGN KEY (`seller_id`)
    REFERENCES `mydb`.`seller` (`seller_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Review` (
  `review_id` VARCHAR(255) NOT NULL,
  `Order_id` VARCHAR(255) NOT NULL,
  `review_score` INT(2) NULL,
  `review_comment_title` VARCHAR(255) NULL,
  `review_comment_message` VARCHAR(255) NULL,
  `review_creation_date` VARCHAR(45) NULL,
  `review_answer_timestamp` VARCHAR(45) NULL,
  PRIMARY KEY (`review_id`),
  INDEX `fk_Review_Orders1_idx` (`Order_id` ASC) VISIBLE,
  CONSTRAINT `fk_Review_Orders1`
    FOREIGN KEY (`Order_id`)
    REFERENCES `mydb`.`Orders` (`Order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
